import { expect, test } from "@jest/globals";
import { parseVaa } from "./wormhole";

test("compute vaa hash", () => {
  const vaaString =
    "01000000000100ebd284c984b03d855fe89cf26b3f05ca1241e56193cab3e8523df1560e43771b6f38b49bdf6522fd4b8f05cea4ca1d9a29d4a005b6e8731eaa93038a75a2a8a40064149744000000000005000000000000000000000000377d55a7928c046e18eebb61977e714d2a76472a00000000000006fa0f0300000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd000400000000000000000000000049a401f7fa594bc618a7a39b316b78e3296201030004000000000000000000000000953a2342496b15d69dec25c8e62274995e82d2430100000000000000000000000000000000000000000000000000000000000073cb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a370e7c5f7f944d451b48bc151a7bec454bc185";
  const vaaBytes = Buffer.from(vaaString, "hex");
  const parsedVaa = parseVaa(vaaBytes);
  expect(parsedVaa.hash.toString("hex")).toBe(
    "8cd1bc4ed2032b02857696a455c08f13f36d5ff14f673b6dcb83258507766e28"
  );
});
